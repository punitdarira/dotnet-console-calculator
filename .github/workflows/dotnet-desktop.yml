name: .NET Core

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: windows-latest

    steps:
    - name: Checkout
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    # Install the .NET Core workload
    - name: Install .NET Core
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: 8.0.x

    # Add MSBuild to the PATH: https://github.com/microsoft/setup-msbuild
    - name: Setup MSBuild.exe
      uses: microsoft/setup-msbuild@v2

    # Execute all unit tests in the solution and collect code coverage
    - name: Execute unit tests
      run: dotnet test --collect:"XPlat Code Coverage"

    # Install ReportGenerator to generate code coverage report
    - name: Install ReportGenerator
      run: dotnet tool install -g dotnet-reportgenerator-globaltool

    # Generate code coverage report
    - name: Generate code coverage report
      run: reportgenerator -reports:**/coverage.cobertura.xml -targetdir:coverage -reporttypes:Html

    # List contents of the coverage directory for debugging
    - name: List coverage directory contents
      run: ls -R coverage

    # Check code coverage threshold
    - name: Check code coverage
      shell: pwsh
      run: |
        $coverageFile = Get-ChildItem -Path 'Calculator.Tests/TestResults' -Recurse -Filter 'coverage.cobertura.xml' | Select-Object -First 1
        $coverage = [xml](Get-Content $coverageFile.FullName)
        Write-Output '$coverage = [xml](Get-Content $coverageFile.FullName)'
        $lineRate = [double]$coverage.coverage['line-rate']
        if ($lineRate -lt 0.80) {
          Write-Error "Code coverage is below 80% ($lineRate)"
          exit 1
        } else {
          Write-Output "Code coverage is sufficient ($lineRate)"
        }